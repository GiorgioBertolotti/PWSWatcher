name: PlayStore Release

on:
  push:
    branches: [ master ]

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Fetch all history for all tags and branches
      run: |
        git config remote.origin.url https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
        git fetch --prune --depth=10000
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.3
      with:
          versionSpec: '5.2.x'
    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.3
    - name: Create version.txt with nuGetVersion
      run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
    - name: Upload version.txt
      uses: actions/upload-artifact@v2
      with:
        name: gitversion
        path: version.txt
  build:
    name: Build APK and Create release
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get version.txt
      uses: actions/download-artifact@v2
      with:
        name: gitversion
    - name: Create new file without newline char from version.txt
      run: tr -d '\n' < version.txt > version1.txt
    - name: Read version
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: version1.txt
    - name: Generate keystore file from secrets base64
      working-directory: pws_watcher
      run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > key.jks
    - name: Update version in YAML
      working-directory: pws_watcher
      run: sed -i "s/99.99.99+99/${{ steps.version.outputs.content }}+$(( ${{ github.run_number }} + 35 ))/g" pubspec.yaml
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.20.2'
    - run: flutter pub get
      working-directory: pws_watcher
    # UNCOMMENT WHEN TESTS WILL BE ADDED
    #- run: flutter test
    #  working-directory: pws_watcher
    - run: flutter build apk --release --split-per-abi --verbose
      working-directory: pws_watcher
      env:
        UPLOAD_KEY_PASSWORD: ${{ secrets.KEYSTORE_PASS }}
    - run: flutter build appbundle --release --verbose
      working-directory: pws_watcher
      env:
        UPLOAD_KEY_PASSWORD: ${{ secrets.KEYSTORE_PASS }}
    - name: Create a Release in GitHub
      uses: ncipollo/release-action@v1
      with:
        artifacts: "pws_watcher/build/app/outputs/apk/release/*.apk,pws_watcher/build/app/outputs/bundle/release/app-release.aab"
        token: ${{ secrets.GH_TOKEN }}
        tag: ${{ steps.version.outputs.content }}
        commit: ${{ github.sha }}
    - name: Upload app bundle
      uses: actions/upload-artifact@v2
      with:
        name: appbundle
        path: pws_watcher/build/app/outputs/bundle/release/app-release.aab
  release:
    name: Release app to internal track
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get appbundle from artifacts
      uses: actions/download-artifact@v2
      with:
        name: appbundle
    - name: Release app to internal track
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
        packageName: com.zem.pwswatcher
        releaseFile: app-release.aab
        track: internal
        whatsNewDirectory: whatsNew
